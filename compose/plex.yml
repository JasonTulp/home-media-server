
#
# USING BACKUP PLEX, NOT THIS ONE
#
#

services:
  plex:
    container_name: plex
    image: lscr.io/linuxserver/plex:latest
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    # profiles: ["core", "all"]
    networks:
      - t2_proxy
      - socket_proxy
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    # command: -H unix:///var/run/docker.sock # # Use Docker Socket Proxy instead for improved security
    command: -H tcp://socket-proxy:2375
    ports:
      - '32400:32400/tcp'
      - '3005:3005/tcp'
      - '8324:8324/tcp'
      - '32469:32469/tcp'
      - '1900:1900/udp'
      - '32410:32410/udp'
      - '32412:32412/udp'
      - '32413:32413/udp'
      - '32414:32414/udp'
    # network_mode: bridge
    volumes:
      - $DOCKERDIR/appdata/plex/config:/config
      - $DOCKERDIR/appdata/plex/cache:/cache
      - /media/movies:/movies
      - /media/tv:/tv
      - /media2/movies:/movies2
      - /media2/tv:/tv2
      - /media2:/media2
    environment:
      TZ: $TZ
      PLEX_UID: $PUID
      PLEX_GID: $PGID
      VERSION: latest
      ADVERTISE_IP: "https://plex.$DOMAINNAME:443"
      #PLEX_CLAIM: #optional
      gpus: all
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all  # Ensure the container has full access
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.plex-rtr.entrypoints=websecure"
      - "traefik.http.routers.plex-rtr.rule=Host(`plex.$DOMAINNAME`)"
      # Middlewares
      - "traefik.http.routers.plex-rtr.middlewares=chain-no-auth@file"
      # HTTP Services
      - "traefik.http.routers.plex-rtr.service=plex-svc"
      - "traefik.http.services.plex-svc.loadbalancer.server.port=32400"
